{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goodsList","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isSelected","className","type","classNames","onClick","carrentState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,IAAMC,SAASJ,EAASK,MAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,IAAMC,UAAS,GAAnD,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA9BD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAmBzB,OAjBIL,GACFM,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQT,GACN,KAAKN,EAASgB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAKXX,GACFI,EAAaQ,UAGRR,EAOWS,CAAkBpB,EAAiB,CACnDO,aACAF,aAGIgB,EAAahB,IAAaN,EAASK,MAAQG,EAmBjD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYnB,IAAaN,EAASgB,WAEpCU,QAzB4B,WAClCnB,EAAYP,EAASgB,WAmBjB,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYnB,IAAaN,EAASkB,SAEpCQ,QA/BsB,WAC5BnB,EAAYP,EAASkB,SAyBjB,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAajB,IAEfkB,QArCc,WACpBjB,GAAc,SAAAkB,GAAY,OAAKA,MA+B3B,qBAUCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBjB,GAAc,GACdF,EAAYP,EAASK,OAqCf,sBAUJ,6BACGK,EAAUkB,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC9HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74291b29.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((g1, g2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return g1.localeCompare(g2);\n        case SortType.LENGTH:\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = React.useState(SortType.NONE);\n  const [isReversed, setIsReversed] = React.useState(false);\n\n  const goodsList = getReorderedGoods(goodsFromServer, {\n    isReversed,\n    sortType,\n  });\n\n  const isSelected = sortType !== SortType.NONE || isReversed;\n\n  const handleSortingAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortingByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(carrentState => !carrentState);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={handleSortingAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={handleSortingByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isSelected && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsList.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}